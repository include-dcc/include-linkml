type Biospecimen
  {
    hasStudy: Study
    hasParticipant: Participant
    sampleId: String!
    sampleType: String!
    ageAtBiospecimenCollection: Integer
    parentSampleId: String
    parentSampleType: String
    collectionId: String
    collectionSampleType: String
    containerId: String
    volume: Float
    volumeUnit: String
    laboratoryProcedure: String
    biospecimenStorage: String
    sampleAvailability: EnumSampleAvailability
  }

type Condition
  {
    hasStudy: Study
    hasParticipant: Participant
    eventId: String
    eventType: String
    conditionSourceText: String
    ageAtConditionObservation: Integer
    conditionInterpretation: EnumConditionInterpretation
    conditionStatus: EnumConditionStatus
    conditionDataSource: EnumConditionDataSource
    hpoLabel: String
    hpoCode: String
    mondoLabel: String
    mondoCode: String
    maxoLabel: String
    maxoCode: String
    otherLabel: String
    otherCode: String
    measureType: String
    measureValue: Integer
    measureUnit: String
    ageAtMeasurement: Integer
  }

type DataFile
  {
    hasStudy: Study
    hasParticipant: Participant
    hasBiospecimen: Biospecimen
    fileId: String
    fileName: String!
    fileHash: String
    dataAccess: EnumDataAccess
    dataCategory: String!
    dataType: String
    experimentalStrategy: String
    experimentalPlatform: String
    fileFormat: String!
    fileSize: Integer
    fileSizeUnit: String
    accessUrl: Uriorcurie
    publicationDoi: String
  }

type Participant
  {
    hasStudy: Study
    participantId: String
    participantExternalId: String!
    familyId: String
    familyType: EnumFamilyType!
    fatherId: String
    motherId: String
    siblingId: String
    otherFamilyMemberId: String
    familyRelationship: EnumFamilyRelationship
    sex: EnumSex!
    race: EnumRace!
    ethnicity: EnumEthnicity!
    downSyndromeStatus: EnumDownSyndromeStatus!
    ageAtFirstPatientEngagement: Integer!
    firstPatientEngagementEvent: String!
    outcomesVitalStatus: EnumVitalStatus
    ageAtLastVitalStatus: Integer
  }

type Study
  {
    studyCode: EnumStudyCode!
    studyName: String!
    program: EnumProgram!
    dbgap: String
  }

type Thing
  {
  }

