{
   "$defs": {
      "Aliquot": {
         "additionalProperties": false,
         "description": "An aliquot of a sample",
         "properties": {},
         "required": [],
         "title": "Aliquot",
         "type": "object"
      },
      "Assay": {
         "additionalProperties": false,
         "description": "An assay",
         "properties": {
            "HasOutput": {
               "$ref": "#/$defs/DataFile",
               "description": "The DataFile Output of an Assay"
            },
            "UsesBiospecimen": {
               "$ref": "#/$defs/Biospecimen",
               "description": "The Biospecimen an Assay is performed on"
            }
         },
         "required": [],
         "title": "Assay",
         "type": "object"
      },
      "Biospecimen": {
         "additionalProperties": false,
         "description": "A Biospecimen Collected from A Participant",
         "properties": {
            "AgeAtBiospecimenCollection": {
               "description": "Age in days of participant at time of biospecimen collection",
               "type": "integer"
            },
            "BiospecimenStorage": {
               "description": "Method by which Container is stored (e.g. -80C freezer, Liquid nitrogen, etc.)",
               "type": "string"
            },
            "CollectionID": {
               "description": "Identifier for the eldest sample in a lineage of processed, pooled, or aliquoted samples. This may be the same as Parent Sample ID or Sample ID (if no processing was performed).",
               "type": "string"
            },
            "CollectionSampleType": {
               "description": "Type of biological material comprising the collected sample (e.g. Whole blood, Bone marrow, Saliva, etc.)",
               "type": "string"
            },
            "ContainerID": {
               "description": "Identifier for specific container/aliquot of sample, if applicable. For example, distinct aliquots of a sample will have the same Sample ID but different Container IDs.",
               "type": "string"
            },
            "HasAliquot": {
               "$ref": "#/$defs/Aliquot",
               "description": "An aliquot of a sample"
            },
            "HasDatafile": {
               "$ref": "#/$defs/DataFile",
               "description": "Link to a DataFile"
            },
            "HasParticipant": {
               "$ref": "#/$defs/Participant",
               "description": "Link to a Participant"
            },
            "HasStudy": {
               "$ref": "#/$defs/Study",
               "description": "Link to a Study"
            },
            "LaboratoryProcedure": {
               "description": "Procedure by which Sample was derived from Parent Sample (e.g. RBC lysis, Centrifugation, Ficoll, etc.)",
               "type": "string"
            },
            "ParentSampleID": {
               "description": "Identifier for the direct parent from which Sample was derived, processed, pooled, etc. (if applicable)",
               "type": "string"
            },
            "ParentSampleType": {
               "description": "Type of biological material comprising the parent sample (e.g. Plasma, Serum, White blood cells, etc.)",
               "type": "string"
            },
            "SampleAvailability": {
               "$ref": "#/$defs/EnumSampleAvailability",
               "description": "Whether or not the sample is potentially available for sharing through the Virtual Biorepository"
            },
            "SampleID": {
               "description": "Identifier for sample. A sample is a unique biological material; two samples with two different IDs are biologically distinct.",
               "type": "string"
            },
            "SampleType": {
               "description": "Type of biological material comprising the sample (e.g. Plasma, Serum, White blood cells, DNA, RNA, etc.)",
               "type": "string"
            },
            "Volume": {
               "description": "Amount of sample in container",
               "type": "number"
            },
            "VolumeUnit": {
               "description": "Unit of sample Volume",
               "type": "string"
            }
         },
         "required": [
            "SampleID",
            "SampleType"
         ],
         "title": "Biospecimen",
         "type": "object"
      },
      "Condition": {
         "additionalProperties": false,
         "description": "A Condition of a Participant",
         "properties": {
            "AgeAtConditionObservation": {
               "description": "Age in days at which condition was observed, recorded, or diagnosed",
               "type": "integer"
            },
            "ConditionDataSource": {
               "$ref": "#/$defs/EnumConditionDataSource",
               "description": "Whether condition information was obtained from medical records (Clinical) or patient survey (Self-Reported)"
            },
            "ConditionInterpretation": {
               "$ref": "#/$defs/EnumConditionInterpretation",
               "description": "Whether condition was observed or not. \"Not Observed\" indicates participant was specifically examined for that condition, or health record specifically queried for that condition, and found to be negative. Sept. 2022 release will only include positive assertions."
            },
            "HPOCode": {
               "description": "Code for condition in the Human Phenotype Ontology (HPO)",
               "type": "string"
            },
            "HPOLabel": {
               "description": "Label for condition in the Human Phenotype Ontology (HPO)",
               "type": "string"
            },
            "HasParticipant": {
               "$ref": "#/$defs/Participant",
               "description": "Link to a Participant"
            },
            "MAXOCode": {
               "description": "Code for condition in the Medical Action Ontology (MAXO)",
               "type": "string"
            },
            "MAXOLabel": {
               "description": "Label for condition in the Medical Action Ontology (MAXO)",
               "type": "string"
            },
            "MONDOCode": {
               "description": "Code for condition in the Mondo Disease Ontology (MONDO)",
               "type": "string"
            },
            "MONDOLabel": {
               "description": "Label for condition in the Mondo Disease Ontology (MONDO)",
               "type": "string"
            },
            "OtherCode": {
               "description": "Code for condition in another ontology (if no match in HPO, MONDO, or MAXO)",
               "type": "string"
            },
            "OtherLabel": {
               "description": "Label for condition in another ontology (if no match in HPO, MONDO, or MAXO)",
               "type": "string"
            }
         },
         "required": [],
         "title": "Condition",
         "type": "object"
      },
      "DataFile": {
         "additionalProperties": false,
         "description": "A DataFile Associated with a Participant or Study or Biospecimen",
         "properties": {
            "AccessURL": {
               "description": "Storage location for this file",
               "type": "string"
            },
            "CollectionID": {
               "description": "Identifier for the eldest sample in a lineage of processed, pooled, or aliquoted samples. This may be the same as Parent Sample ID or Sample ID (if no processing was performed).",
               "type": "string"
            },
            "DataAccess": {
               "$ref": "#/$defs/EnumDataAccess",
               "description": "Type of access control on this file, determined by DCC"
            },
            "DataCategory": {
               "description": "General category of data in file (e.g. Clinical, Genomics, Proteomics, Metabolomics, Immune maps, Transcriptomics, etc.)",
               "type": "string"
            },
            "DataType": {
               "description": "Specific type of data contained in file (e.g. Aligned reads, Unaligned reads, SNV, CNV, Gene fusions, Isoform expression, Gene expression quantification, Structural variations, Cytokine profiles, Operation reports, Pathology reports, Histology images, Clinical supplement, Protein expression quantification, etc.)",
               "type": "string"
            },
            "ExperimentalStrategy": {
               "description": "Experimental method used to obtain data in file (e.g. WGS, RNAseq, WXS, SOMAscan, Mass spec proteomics, LCMS metabolomics, Multiplex immunoassay, Meso Scale Discovery, etc.)",
               "type": "string"
            },
            "FileID": {
               "description": "File identifier, assigned by DCC",
               "type": "string"
            },
            "FileName": {
               "description": "Synapse ID for file",
               "type": "string"
            },
            "Format": {
               "description": "Format of file (e.g. bam, cram, vcf, csv, html, png, fastq, pdf, dicom, etc.)",
               "type": "string"
            },
            "HasBiospecimen": {
               "$ref": "#/$defs/Biospecimen",
               "description": "Link to a Biospecimen"
            },
            "HasParticipant": {
               "$ref": "#/$defs/Participant",
               "description": "Link to a Participant"
            },
            "HasStudy": {
               "$ref": "#/$defs/Study",
               "description": "Link to a Study"
            },
            "OriginalFileName": {
               "description": "Name of file, assigned by data contributor",
               "type": "string"
            },
            "ParticipantID": {
               "description": "Unique identifier for the participant, assigned by DCC",
               "type": "string"
            },
            "Size": {
               "description": "Size of file",
               "type": "string"
            }
         },
         "required": [
            "DataCategory",
            "FileName",
            "Format",
            "ParticipantID",
            "OriginalFileName"
         ],
         "title": "DataFile",
         "type": "object"
      },
      "EnumConditionDataSource": {
         "description": "",
         "enum": [
            "clinical",
            "self_reported"
         ],
         "title": "EnumConditionDataSource",
         "type": "string"
      },
      "EnumConditionInterpretation": {
         "description": "",
         "enum": [
            "observed",
            "not_observed"
         ],
         "title": "EnumConditionInterpretation",
         "type": "string"
      },
      "EnumDataAccess": {
         "description": "",
         "enum": [
            "controlled",
            "open",
            "registered"
         ],
         "title": "EnumDataAccess",
         "type": "string"
      },
      "EnumDownSyndromeStatus": {
         "description": "",
         "enum": [
            "d21",
            "t21"
         ],
         "title": "EnumDownSyndromeStatus",
         "type": "string"
      },
      "EnumEthnicity": {
         "description": "",
         "enum": [
            "asked_but_unknown",
            "hispanic_or_latino",
            "not_hispanic_or_latino",
            "prefer_not_to_answer",
            "unknown"
         ],
         "title": "EnumEthnicity",
         "type": "string"
      },
      "EnumFamilyType": {
         "description": "",
         "enum": [
            "duo",
            "other",
            "proband_only",
            "trio",
            "trio_plus"
         ],
         "title": "EnumFamilyType",
         "type": "string"
      },
      "EnumProgram": {
         "description": "",
         "enum": [
            "include",
            "kf"
         ],
         "title": "EnumProgram",
         "type": "string"
      },
      "EnumRace": {
         "description": "",
         "enum": [
            "american_indian_or_alaskan_native",
            "asian",
            "black_or_african_american",
            "more_than_one_Race",
            "native_hawaiian_or_other_pacific_islander",
            "other",
            "white",
            "prefer_not_to_answer"
         ],
         "title": "EnumRace",
         "type": "string"
      },
      "EnumSampleAvailability": {
         "description": "",
         "enum": [
            "available",
            "unavailable"
         ],
         "title": "EnumSampleAvailability",
         "type": "string"
      },
      "EnumSex": {
         "description": "",
         "enum": [
            "female",
            "male",
            "other",
            "unknown"
         ],
         "title": "EnumSex",
         "type": "string"
      },
      "EnumStudyCode": {
         "description": "",
         "enum": [
            "ds_cog_all",
            "ds_pcgc",
            "ds360_chd",
            "dsc",
            "htp",
            "abcds",
            "ads",
            "ds_brain",
            "ds_cog_aml",
            "bri_dsr",
            "ds_isp",
            "ds_nexus",
            "ds_pals",
            "ds_sleep",
            "ecods",
            "exceeds",
            "trc_ds",
            "x01_desmith",
            "x01_hakon"
         ],
         "title": "EnumStudyCode",
         "type": "string"
      },
      "EnumVitalStatus": {
         "description": "",
         "enum": [
            "dead",
            "alive"
         ],
         "title": "EnumVitalStatus",
         "type": "string"
      },
      "FamilyGroup": {
         "additionalProperties": false,
         "description": "A group of Participants in the same Study",
         "properties": {
            "HasParticipant": {
               "$ref": "#/$defs/Participant",
               "description": "Link to a Participant"
            }
         },
         "required": [],
         "title": "FamilyGroup",
         "type": "object"
      },
      "Participant": {
         "additionalProperties": false,
         "description": "A Participant in a Study",
         "properties": {
            "AgeAtLastVitalStatus": {
               "description": "Age in days when participant's vital status was last recorded",
               "type": "integer"
            },
            "DownSyndromeStatus": {
               "$ref": "#/$defs/EnumDownSyndromeStatus",
               "description": "Down Syndrome status of participant (T21 = Trisomy 21; D21 = Disomy 21, euploid)"
            },
            "Ethnicity": {
               "$ref": "#/$defs/EnumEthnicity",
               "description": "Ethnicity of participant"
            },
            "ExternalID": {
               "description": "Unique identifier for the participant, assigned by data contributor",
               "type": "string"
            },
            "FamilyID": {
               "description": "Unique identifer for family to which Participant belongs",
               "type": "string"
            },
            "FamilyRelationship": {
               "$ref": "#/$defs/Participant",
               "description": "Relationship of Participant to other family members"
            },
            "FamilyType": {
               "$ref": "#/$defs/EnumFamilyType",
               "description": "Structure of family members participating in the study (proband-only = no family members participating; duo = proband + parent; trio = proband + 2 parents; trio+ = proband + 2 parents + other relatives)"
            },
            "FatherID": {
               "description": "Participant ID for Participant's father",
               "type": "string"
            },
            "HasDatafile": {
               "$ref": "#/$defs/DataFile",
               "description": "Link to a DataFile"
            },
            "HasStudy": {
               "$ref": "#/$defs/Study",
               "description": "Link to a Study"
            },
            "MotherID": {
               "description": "Participant ID for Participant's mother",
               "type": "string"
            },
            "OutcomesVitalStatus": {
               "$ref": "#/$defs/EnumVitalStatus",
               "description": "Whether participant is alive or dead"
            },
            "ParticipantID": {
               "description": "Unique identifier for the participant, assigned by DCC",
               "type": "string"
            },
            "Race": {
               "$ref": "#/$defs/EnumRace",
               "description": "Race of participant"
            },
            "Sex": {
               "$ref": "#/$defs/EnumSex",
               "description": "Sex of participant"
            }
         },
         "required": [
            "DownSyndromeStatus",
            "Ethnicity",
            "ExternalID",
            "FamilyType",
            "ParticipantID",
            "Race",
            "Sex"
         ],
         "title": "Participant",
         "type": "object"
      },
      "Study": {
         "additionalProperties": false,
         "description": "A Study",
         "properties": {
            "HasParticipant": {
               "$ref": "#/$defs/Participant",
               "description": "Link to a Participant"
            },
            "Program": {
               "$ref": "#/$defs/EnumProgram",
               "description": "Funding source for the study"
            },
            "StudyCode": {
               "$ref": "#/$defs/EnumStudyCode",
               "description": "Unique identifer for the study, assigned by DCC"
            },
            "StudyName": {
               "description": "Name of the study, chosen by data contributor",
               "type": "string"
            },
            "dbGap": {
               "description": "dbGap study accession code",
               "type": "string"
            }
         },
         "required": [
            "Program",
            "StudyCode",
            "StudyName"
         ],
         "title": "Study",
         "type": "object"
      },
      "Thing": {
         "additionalProperties": false,
         "description": "Highest Level Class",
         "properties": {},
         "required": [],
         "title": "Thing",
         "type": "object"
      }
   },
   "$id": "https://w3id.org/include",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "additionalProperties": true,
   "metamodel_version": "1.7.0",
   "properties": {},
   "required": [],
   "title": "include-schema",
   "type": "object",
   "version": null
}
